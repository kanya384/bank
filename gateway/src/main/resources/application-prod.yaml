server:
  port: 8090
spring:
  config:
    import: optional:consul:consul:8500
  application:
    name: gateway
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${keycloak_url}/realms/bank/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            token-uri: http://${keycloak_url}/realms/bank/protocol/openid-connect/token
        registration:
          accounts:
            provider: keycloak
            client-id: accounts
            client-secret: ${accounts_secret}
            scope: profile
            authorization-grant-type: client_credentials
          blocker:
            provider: keycloak
            client-id: blocker
            client-secret: ${blocker_secret}
            scope: profile
            authorization-grant-type: client_credentials
          cash:
            provider: keycloak
            client-id: cash
            client-secret: ${cash_secret}
            scope: profile
            authorization-grant-type: client_credentials
          exchange:
            provider: keycloak
            client-id: exchange
            client-secret: ${exchange_secret}
            scope: profile
            authorization-grant-type: client_credentials
          exchange-generator:
            provider: keycloak
            client-id: exchange_generator
            client-secret: ${exchange_generator_secret}
            scope: profile
            authorization-grant-type: client_credentials
          notifications:
            provider: keycloak
            client-id: notifications
            client-secret: ${notifications_secret}
            scope: profile
            authorization-grant-type: client_credentials
          transfer:
            provider: keycloak
            client-id: transfer
            client-secret: ${transfer_secret}
            scope: profile
            authorization-grant-type: client_credentials
  cloud:
    consul:
      host: consul
      port: 8500
    gateway:
      routes:
        - id: to-accounts
          uri: ${accounts_service_url}
          predicates:
            - Path=/accounts/**
          filters:
            - RewritePath=/accounts/?(?<segment>.*), /$\{segment}
            - name: TokenRelayKeycloak
              args:
                registrationId: accounts
        - id: to-blocker
          uri: ${blocker_service_url}
          predicates:
            - Path=/blocker/**
          filters:
            - RewritePath=/blocker/?(?<segment>.*), /$\{segment}
            - name: TokenRelayKeycloak
              args:
                registrationId: blocker
        - id: to-cash
          uri: ${cash_service_url}
          predicates:
            - Path=/cash/**
          filters:
            - RewritePath=/cash/?(?<segment>.*), /$\{segment}
            - name: TokenRelayKeycloak
              args:
                registrationId: cash
        - id: to-exchange
          uri: ${exchange_service_url}
          predicates:
            - Path=/exchange/**
          filters:
            - RewritePath=/exchange/?(?<segment>.*), /$\{segment}
            - name: TokenRelayKeycloak
              args:
                registrationId: exchange
        - id: to-notifications
          uri: ${notifications_service_url}
          predicates:
            - Path=/notifications/**
          filters:
            - RewritePath=/notifications/?(?<segment>.*), /$\{segment}
            - name: TokenRelayKeycloak
              args:
                registrationId: notifications
        - id: to-transfer
          uri: ${transfer_service_url}
          predicates:
            - Path=/transfer/**
          filters:
            - RewritePath=/transfer/?(?<segment>.*), /$\{segment}
            - name: TokenRelayKeycloak
              args:
                registrationId: transfer
logging:
  level:
    org:
      springframework:
        security: DEBUG