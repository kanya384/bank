version: '3'
networks:
  app-net:
    driver: bridge
services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./db.init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./storage/postgres:/var/lib/postgresql/data
    networks:
      - app-net
  keycloak:
    platform: linux/amd64
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: 'keycloak'
    command: start-dev --import-realm
    #    ports:
    #      - "8080:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    volumes:
      - ./storage/keycloak:/opt/keycloak/data/h2
    networks:
      - app-net
  consul:
    image: bitnami/consul:1.21.0
    container_name: 'consul'
    #    ports:
    #      - "8500:8500"
    #      - "8400:8400"
    #      - "8600:8600"
    environment:
      - CONSUL_CLIENT_LAN_ADDRESS=0.0.0.0
      - CONSUL_DISABLE_KEYRING_FILE=true
      - CONSUL_RETRY_JOIN_ADDRESS=consul
    volumes:
      - ./storage/consul:/bitnami
    networks:
      - app-net
  accounts:
    image: accounts
    build:
      dockerfile: accounts/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  blocker:
    container_name: blocker
    build:
      dockerfile: blocker/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  cash:
    container_name: cash
    build:
      dockerfile: cash/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  exchange:
    container_name: exchange
    build:
      dockerfile: exchange/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  exchange-generator:
    container_name: exchange-generator
    build:
      dockerfile: exchange-generator/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  front:
    container_name: front
    build:
      dockerfile: front/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    ports:
      - "80:80"
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  gateway:
    container_name: gateway
    build:
      dockerfile: gateway/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  notifications:
    container_name: notifications
    build:
      dockerfile: notifications/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net
  transfer:
    container_name: transfer
    build:
      dockerfile: transfer/Dockerfile
      context: .
    environment:
      SPRING_CONFIG_IMPORT: optional:consul:consul:8500
      SPRING_CLOUD_CONSUL_HOST: discovery
    depends_on:
      - consul
      - keycloak
      - postgres
    networks:
      - app-net