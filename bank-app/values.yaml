global:
  domain: bank.app # Example domain for ingress

keycloak:
  image:
    tag: "26.2.4" #default image crashes on m4
  auth:
    adminUser: admin
    adminPassword: admin
  postgresql:
    auth:
      username: keycloak
      database: keycloak
      password: keycloak
  volumes:
    - ./configurations:/opt/bitnami/keycloak/data/import
  service:
    type: ClusterIP
    port: 8080 # Default port, overridden by umbrella

  ingress:
    enabled: true
    ingressClassName: "nginx"
    path: /
    hostname: bank-app-keycloak

kafka:
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    external:
      protocol: PLAINTEXT

accounts:
  replicaCount: 1
  image:
    repository: laurkan/accounts # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9000
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    database_url: "postgresql://{{ .Release.Name }}-main-db:5432/accounts"
    database_username: "postgres"
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

streams:
  replicaCount: 1
  image:
    repository: laurkan/streams # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 1000
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

main-db:
  enabled: true
  auth:
    username: postgres
    password: "changeM3Customer!" # Example: Not recommended for production
  primary:
    persistence:
      enabled: true
      size: 1Gi # Small size for example
    initdb:
      scripts:
        init.sql: |
          create database accounts;
          create database notifications;
          create database cash;
          create database exchange;
          create database transfer;


oauth2proxy:
  service:
    port: 8070
  image:
    repository: laurkan/oauth2-proxy
    tag: "latest"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
      #nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    hosts:
      - host: ingress-nginx-controller.ingress-nginx
        paths:
          - path: /accounts(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /blocker(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /exchange(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /notifications(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /cash(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /transfer(/|$)(.*)
            pathType: ImplementationSpecific
      - host: main.test.local
        paths:
          - path: /accounts(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /blocker(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /exchange(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /notifications(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /cash(/|$)(.*)
            pathType: ImplementationSpecific
          - path: /transfer(/|$)(.*)
            pathType: ImplementationSpecific
    tls: []
  config:
    clientId: accounts
    keycloak_uri: "http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/token"
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"
    clients:
      - clientId: accounts
        clientSecret: topsecret
        upstream: "http://{{ .Release.Name }}-accounts:9000"
      - clientId: blocker
        clientSecret: topsecret
        upstream: "http://{{ .Release.Name }}-blocker:9010"
      - clientId: exchange
        clientSecret: topsecret
        upstream: "http://{{ .Release.Name }}-exchange:9060"
      - clientId: notifications
        clientSecret: topsecret
        upstream: "http://{{ .Release.Name }}-notifications:9020"
      - clientId: cash
        clientSecret: topsecret
        upstream: "http://{{ .Release.Name }}-cash:9050"
      - clientId: transfer
        clientSecret: topsecret
        upstream: "http://{{ .Release.Name }}-transfer:9090"

blocker:
  replicaCount: 1
  image:
    repository: laurkan/blocker # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9010
  config:
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

exchange:
  replicaCount: 1
  image:
    repository: laurkan/exchange # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9060
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    database_url: "postgresql://{{ .Release.Name }}-main-db:5432/exchange"
    database_username: "postgres"
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

exchangegenerator:
  replicaCount: 1
  image:
    repository: laurkan/exchange-generator # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9070
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    gateway_url: "http://ingress-nginx-controller.ingress-nginx"
    keycloak_url: "http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

notifications:
  replicaCount: 1
  image:
    repository: laurkan/notifications # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9020
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    database_url: "postgresql://{{ .Release.Name }}-main-db:5432/notifications"
    database_username: "postgres"
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    mail_username: kanya384@mail.ru
    mail_password: up1qKNZxxRHAnSKs0GXs
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

cash:
  replicaCount: 1
  image:
    repository: laurkan/cash # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9050
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    database_url: "postgresql://{{ .Release.Name }}-main-db:5432/cash"
    database_username: "postgres"
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    gateway_url: "http://ingress-nginx-controller.ingress-nginx"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"

transfer:
  replicaCount: 1
  image:
    repository: laurkan/transfer # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  service:
    type: ClusterIP
    port: 9090
  config:
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    database_url: "postgresql://{{ .Release.Name }}-main-db:5432/transfer"
    database_username: "postgres"
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    gateway_url: "http://ingress-nginx-controller.ingress-nginx"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"


front:
  replicaCount: 1
  image:
    repository: laurkan/front # Removed registry prefix
    tag: "latest"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: main.test.local
        paths:
          - path: /
            pathType: Prefix
    tls: [ ]
  service:
    type: ClusterIP
    port: 80
  config:
    keycloak_url: http://{{ .Release.Name }}-keycloak/realms/bank/protocol/openid-connect/certs
    gateway_url: "http://ingress-nginx-controller.ingress-nginx"
    kafka_url: "http://{{ .Release.Name }}-kafka-controller-0.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-1.{{ .Release.Name }}-kafka-controller-headless:9092,http://{{ .Release.Name }}-kafka-controller-2.{{ .Release.Name }}-kafka-controller-headless:9092"
    zipkin_endpoint: "http://monitoring-zipkin.monitoring.svc.cluster.local:9411/api/v2/spans"